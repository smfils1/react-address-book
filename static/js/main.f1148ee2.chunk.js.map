{"version":3,"sources":["components/NavBar/NavBar.module.css","assets/default-img.png","components/Header/Header.js","components/NewContactForm/NewContactForm.js","components/AddContactPage/AddContactPage.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/SearchBox/SearchBox.js","components/AddressBook/AddressBook.js","components/ContactsPage/ContactsPage.js","components/NavBar/NavBar.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","children","className","NewContactForm","submitHandler","fnameChangeHandler","lnameChangeHandler","phoneChangeHandler","birthDateChangeHandler","Form","Group","controlId","Label","Control","onChange","type","name","placeholder","to","Button","onClick","AddContactPage","Container","Contact","FirstName","LastName","Birthday","Telephone","width","deleteHandler","Card","style","Row","Col","xs","Img","src","defaultImg","Title","Subtitle","Text","value","variant","ContactList","contacts","map","contact","key","v4","SearchBox","searchChangeHandler","InputGroup","FormControl","aria-label","aria-describedby","Append","id","AddressBook","length","ContactsPage","NavBar","location","Navbar","collapseOnSelect","expand","bg","Brand","logoText","logo","Toggle","aria-controls","Collapse","Nav","exact","Link","link","active","App","state","submitNewData","newFirstName","newLastName","newPhone","newBirthDate","search","getUniqueId","filteredContacts","filter","infoObject","Object","values","some","trim","toLowerCase","includes","test","event","window","confirm","currentTarget","setState","prevState","i","splice","newContact","push","preventDefault","inputChangeHandler","stateToChange","input","target","update","basename","process","path","render","routeProps","Component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,SAAW,yBAAyB,KAAO,qBAAqB,KAAO,uB,mBCDzFD,EAAOC,QAAU,IAA0B,yC,6MCM5BC,EAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OAAO,yBAAKC,UAAU,6BAA6BD,I,+BCsDxCE,EApDQ,SAAC,GAOjB,IANHD,EAME,EANFA,UACAE,EAKE,EALFA,cACAC,EAIE,EAJFA,mBACAC,EAGE,EAHFA,mBACAC,EAEE,EAFFA,mBACAC,EACE,EADFA,uBAEA,OACI,kBAACC,EAAA,EAAD,CAAMP,UAAWA,GACb,kBAACO,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CACIC,SAAUT,EACVU,KAAK,OACLC,KAAK,QACLC,YAAY,sBAGpB,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CACIC,SAAUR,EACVS,KAAK,OACLE,YAAY,qBAGpB,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CACIC,SAAUP,EACVQ,KAAK,MACLE,YAAY,iBAGpB,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,mBACA,kBAACH,EAAA,EAAKI,QAAN,CACIC,SAAUN,EACVO,KAAK,OACLE,YAAY,gBAGpB,kBAAC,gBAAD,CAAeC,GAAG,KACd,kBAACC,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAAShB,GAA/B,kBCvBDiB,EApBQ,SAAC,GAAD,IACnBjB,EADmB,EACnBA,cACAC,EAFmB,EAEnBA,mBACAC,EAHmB,EAGnBA,mBACAC,EAJmB,EAInBA,mBACAC,EALmB,EAKnBA,uBALmB,OAOnB,kBAACc,EAAA,EAAD,KACI,kBAAC,EAAD,oBACA,kBAAC,EAAD,CACIpB,UAAU,sBACVE,cAAeA,EACfC,mBAAoBA,EACpBC,mBAAoBA,EACpBC,mBAAoBA,EACpBC,uBAAwBA,M,iDCsBrBe,EAnCC,SAAC,GAAD,IACZC,EADY,EACZA,UACAC,EAFY,EAEZA,SACAC,EAHY,EAGZA,SACAC,EAJY,EAIZA,UACAC,EALY,EAKZA,MACAC,EANY,EAMZA,cANY,OAQZ,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEH,UACX,kBAACI,EAAA,EAAD,CAAK9B,UAAU,cACX,kBAAC+B,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACJ,EAAA,EAAKK,IAAN,CAAUC,IAAKC,OAEnB,kBAACJ,EAAA,EAAD,CAAKC,GAAI,GACL,yBAAKhC,UAAU,aACX,kBAAC4B,EAAA,EAAKQ,MAAN,eAAgBd,EAAhB,aAA8BC,IAC9B,kBAACK,EAAA,EAAKS,SAAN,CAAerC,UAAU,mBACpByB,GAEL,kBAACG,EAAA,EAAKU,KAAN,KAAYd,KAGpB,kBAACO,EAAA,EAAD,CAAKC,GAAI,EAAGhC,UAAU,4BAClB,kBAACiB,EAAA,EAAD,CACIsB,MAAK,UAAKjB,GAAL,OAAiBC,GAAjB,OAA4BE,GAA5B,OAAwCD,GAC7CN,QAASS,EACTa,QAAQ,UAER,kBAAC,IAAD,W,QClBLC,EAdK,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAU1C,EAA+B,EAA/BA,UAAW2B,EAAoB,EAApBA,cAWxC,OAAO,yBAAK3B,UAAWA,GATnB0C,EAASC,KAAI,SAAAC,GAAO,OAChB,kBAAC,EAAD,iBACQA,EADR,CAEIjB,cAAeA,EACfD,MAAM,QACNmB,IAAKC,uB,gBCcNC,EArBG,SAAC,GAA+C,IAA7CrB,EAA4C,EAA5CA,MAAO1B,EAAqC,EAArCA,UAAWgD,EAA0B,EAA1BA,oBACnC,OACI,kBAACC,EAAA,EAAD,CAAYpB,MAAO,CAAEH,SAAS1B,UAAWA,GACrC,kBAACkD,EAAA,EAAD,CACInC,YAAY,4BACZoC,aAAW,SACXC,mBAAiB,eACjBxC,SAAUoC,IAEd,kBAACC,EAAA,EAAWI,OAAZ,KACI,kBAACJ,EAAA,EAAWX,KAAZ,CACIgB,GAAG,eACHtD,UAAU,yBAFd,aCcDuD,EAvBK,SAAC,GAAsD,IAApDb,EAAmD,EAAnDA,SAAUM,EAAyC,EAAzCA,oBAAqBrB,EAAoB,EAApBA,cAClD,OACI,kBAACP,EAAA,EAAD,KACI,kBAAC,EAAD,CACI4B,oBAAqBA,EACrBtB,MAAM,QACN1B,UAAU,iBAEO,IAApB0C,EAASc,OACN,wBAAIxD,UAAU,eAAd,eAEA,6BACI,kBAAC,EAAD,CACI0C,SAAUA,EACVf,cAAeA,EACf3B,UAAU,qDCLnByD,EAXM,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAUM,EAAb,EAAaA,oBAAqBrB,EAAlC,EAAkCA,cAAlC,OACjB,6BACI,kBAAC,EAAD,iBACA,kBAAC,EAAD,CACIe,SAAUA,EACVM,oBAAqBA,EACrBrB,cAAeA,M,iDC+BZ+B,EAjCA,SAAC,GAAiB,EAAfC,SACd,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOvB,QAAQ,QACnD,kBAACpB,EAAA,EAAD,KACI,kBAAC,gBAAD,CAAeJ,GAAG,KACd,kBAAC4C,EAAA,EAAOI,MAAR,CAAchE,UAAW6B,IAAMoC,UAC3B,kBAAC,IAAD,CAAYjE,UAAW6B,IAAMqC,OAC5B,iBAGT,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAE7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBf,GAAG,yBAChB,kBAACgB,EAAA,EAAD,CAAKtE,UAAU,WACX,kBAAC,gBAAD,CAAeuE,OAAK,EAACvD,GAAG,KACpB,kBAACsD,EAAA,EAAIE,KAAL,CAAUxE,UAAW6B,IAAM4C,KAAMC,QAAQ,GAAzC,aAIJ,kBAAC,gBAAD,CAAe1D,GAAG,gBACd,kBAACsD,EAAA,EAAIE,KAAL,CAAUxE,UAAW6B,IAAM4C,KAAMC,QAAQ,GAAzC,sBCuKjBC,E,2MA5LXC,MAAQ,CACJC,eAAe,EACfC,aAAc,GACdC,YAAa,GACbC,SAAU,GACVC,aAAc,GACdC,OAAQ,GACRxC,SAAU,CACN,CACIpB,UAAW,QACXC,SAAU,SACVC,SAAU,YACVC,UAAW,gBAEf,CACIH,UAAW,UACXC,SAAU,SACVC,SAAU,YACVC,UAAW,gBAEf,CACIH,UAAW,SACXC,SAAU,SACVC,SAAU,WACVC,UAAW,gBAEf,CACIH,UAAW,UACXC,SAAU,SACVC,SAAU,aACVC,UAAW,gBAEf,CACIH,UAAW,QACXC,SAAU,WACVC,SAAU,YACVC,UAAW,gBAEf,CACIH,UAAW,OACXC,SAAU,QACVC,SAAU,YACVC,UAAW,kB,EAMvB0D,YAAc,YAAmD,IAAhD7D,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC5C,MAAM,GAAN,OAAUH,GAAV,OAAsBC,GAAtB,OAAiCE,GAAjC,OAA6CD,I,EAGjD4D,iBAAmB,WAAO,IAAD,EACQ,EAAKR,MAA1BM,EADa,EACbA,OAAQxC,EADK,EACLA,SAShB,OAAOA,EAAS2C,QAAO,SAAAzC,GAAO,OARjB,SAACsC,EAAQI,GAClB,OAAOC,OAAOC,OAAOF,GAAYG,MAAK,SAAAlD,GAAK,OACvCA,EACKmD,OACAC,cACAC,SAASV,EAAOQ,OAAOC,kBAGFE,CAAKX,EAAQtC,O,EAGnDjB,cAAgB,SAAAmE,GAKZ,GAJmBC,OAAOC,QACtB,4CAGY,CACZ,IAAM1C,EAAKwC,EAAMG,cAAc1D,MAC/B,EAAK2D,UAAS,SAAAC,GAEV,IADA,IAAIzD,EAAQ,YAAOyD,EAAUzD,UACpB0D,EAAI,EAAGA,EAAI1D,EAASc,OAAQ4C,IACjC,GAAI9C,IAAO,EAAK6B,YAAYzC,EAAS0D,IAAK,CACtC1D,EAAS2D,OAAOD,EAAG,GACnB,MAGR,MAAO,CAAE1D,iB,EAKrBxC,cAAgB,SAAA4F,GACZ,IAAMjB,EAAgBkB,OAAOC,QACzB,6CAECnB,EAID,EAAKqB,UAAS,SAAAC,GACV,IAAMG,EAAa,CACfhF,UAAW6E,EAAUrB,aACrBvD,SAAU4E,EAAUpB,YACpBtD,UAAW0E,EAAUnB,SACrBxD,SAAU2E,EAAUlB,cAElBvC,EAAQ,YAAOyD,EAAUzD,UAE/B,OADAA,EAAS6D,KAAKD,GACP,CAAEzB,gBAAenC,SAAS,YAAKA,QAZ1CoD,EAAMU,iBACN,EAAKN,SAAS,CAAErB,oB,EAgBxB4B,mBAAqB,SAACX,EAAOY,GACzB,IAAMC,EAAQb,EAAMc,OAAOrE,MACrBsE,EAAS,GACfA,EAAOH,GAAiBC,EACxB,EAAKT,SAASW,I,EAGlB7D,oBAAsB,SAAA8C,GAClB,EAAKW,mBAAmBX,EAAO,W,EAGnC3F,mBAAqB,SAAA2F,GACjB,EAAKW,mBAAmBX,EAAO,iB,EAGnC1F,mBAAqB,SAAA0F,GACjB,EAAKW,mBAAmBX,EAAO,gB,EAGnCzF,mBAAqB,SAAAyF,GACjB,EAAKW,mBAAmBX,EAAO,a,EAGnCxF,uBAAyB,SAAAwF,GACrB,EAAKW,mBAAmBX,EAAO,iB,wEAGzB,IAAD,OACL,OACI,oCACI,kBAAC,gBAAD,CAAQgB,SAAUC,wBACd,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIxC,OAAK,EACLyC,KAAK,IACLC,OAAQ,SAAAC,GAAU,OACd,kBAAC,EAAD,iBACQA,EADR,CAEIxE,SAAU,EAAK0C,mBACfpC,oBACI,EAAKA,oBAETrB,cAAe,EAAKA,oBAIhC,kBAAC,IAAD,CACIqF,KAAK,eACLC,OAAQ,SAAAC,GAAU,OACd,kBAAC,EAAD,iBACQA,EADR,CAEIhH,cAAe,EAAKA,cACpBC,mBAAoB,EAAKA,mBACzBC,mBAAoB,EAAKA,mBACzBC,mBAAoB,EAAKA,mBACzBC,uBACI,EAAKA,6BAKrB,kBAAC,IAAD,CACI0G,KAAK,IACLC,OAAQ,SAAAC,GAAU,OACd,kBAAC,EAAD,iBACQA,EADR,CAEIxE,SAAU,EAAK0C,mBACfpC,oBACI,EAAKA,oBAETrB,cAAe,EAAKA,2B,GAnLtCwF,aCKEC,QACW,cAA7BrB,OAAOpC,SAAS0D,UAEe,UAA7BtB,OAAOpC,SAAS0D,UAEhBtB,OAAOpC,SAAS0D,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,EAAD,MAASO,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f1148ee2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoText\":\"NavBar_logoText__35mD2\",\"logo\":\"NavBar_logo__2uzfx\",\"link\":\"NavBar_link__vh2Bq\"};","module.exports = __webpack_public_path__ + \"static/media/default-img.b6681619.png\";","import React from \"react\";\r\n\r\nconst Header = ({ children }) => {\r\n    return <div className=\"text-center m-3 display-4\">{children}</div>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { LinkContainer } from \"react-router-bootstrap/\";\r\n\r\nconst NewContactForm = ({\r\n    className,\r\n    submitHandler,\r\n    fnameChangeHandler,\r\n    lnameChangeHandler,\r\n    phoneChangeHandler,\r\n    birthDateChangeHandler\r\n}) => {\r\n    return (\r\n        <Form className={className}>\r\n            <Form.Group controlId=\"formGroupEmail\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                    onChange={fnameChangeHandler}\r\n                    type=\"text\"\r\n                    name=\"fname\"\r\n                    placeholder=\"Enter First Name\"\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGroupEmail\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                    onChange={lnameChangeHandler}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Last Name\"\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGroupPassword\">\r\n                <Form.Label>Telephone #</Form.Label>\r\n                <Form.Control\r\n                    onChange={phoneChangeHandler}\r\n                    type=\"tel\"\r\n                    placeholder=\"Telephone #\"\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formGroupPassword\">\r\n                <Form.Label>Birth Date</Form.Label>\r\n                <Form.Control\r\n                    onChange={birthDateChangeHandler}\r\n                    type=\"date\"\r\n                    placeholder=\"Birth Date\"\r\n                />\r\n            </Form.Group>\r\n            <LinkContainer to=\"/\">\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    Add Contact\r\n                </Button>\r\n            </LinkContainer>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default NewContactForm;\r\n","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport NewContactForm from \"../NewContactForm/NewContactForm\";\r\n\r\nconst AddContactPage = ({\r\n    submitHandler,\r\n    fnameChangeHandler,\r\n    lnameChangeHandler,\r\n    phoneChangeHandler,\r\n    birthDateChangeHandler\r\n}) => (\r\n    <Container>\r\n        <Header>Add Contact</Header>\r\n        <NewContactForm\r\n            className=\"m-auto py-4 w-sm-75\"\r\n            submitHandler={submitHandler}\r\n            fnameChangeHandler={fnameChangeHandler}\r\n            lnameChangeHandler={lnameChangeHandler}\r\n            phoneChangeHandler={phoneChangeHandler}\r\n            birthDateChangeHandler={birthDateChangeHandler}\r\n        />\r\n    </Container>\r\n);\r\n\r\nexport default AddContactPage;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport defaultImg from \"../../assets/default-img.png\";\r\nimport { FaRegTrashAlt } from \"react-icons/fa\";\r\n\r\nconst Contact = ({\r\n    FirstName,\r\n    LastName,\r\n    Birthday,\r\n    Telephone,\r\n    width,\r\n    deleteHandler\r\n}) => (\r\n    <Card style={{ width }}>\r\n        <Row className=\"no-gutters\">\r\n            <Col xs={3}>\r\n                <Card.Img src={defaultImg} />\r\n            </Col>\r\n            <Col xs={7}>\r\n                <div className=\"ml-3 mt-2\">\r\n                    <Card.Title>{`${FirstName}  ${LastName}`}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-1 text-muted\">\r\n                        {Telephone}\r\n                    </Card.Subtitle>\r\n                    <Card.Text>{Birthday}</Card.Text>\r\n                </div>\r\n            </Col>\r\n            <Col xs={2} className=\"mt-auto mb-2 text-center\">\r\n                <Button\r\n                    value={`${FirstName}${LastName}${Telephone}${Birthday}`}\r\n                    onClick={deleteHandler}\r\n                    variant=\"danger\"\r\n                >\r\n                    <FaRegTrashAlt />\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    </Card>\r\n);\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst ContactList = ({ contacts, className, deleteHandler }) => {\r\n    const createContacts = () =>\r\n        contacts.map(contact => (\r\n            <Contact\r\n                {...contact}\r\n                deleteHandler={deleteHandler}\r\n                width=\"25rem\"\r\n                key={v4()}\r\n            />\r\n        ));\r\n\r\n    return <div className={className}>{createContacts()}</div>;\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nconst SearchBox = ({ width, className, searchChangeHandler }) => {\r\n    return (\r\n        <InputGroup style={{ width }} className={className}>\r\n            <FormControl\r\n                placeholder=\"Name, Phone, or Birthdate\"\r\n                aria-label=\"search\"\r\n                aria-describedby=\"basic-addon2\"\r\n                onChange={searchChangeHandler}\r\n            />\r\n            <InputGroup.Append>\r\n                <InputGroup.Text\r\n                    id=\"basic-addon2\"\r\n                    className=\"bg-primary text-white\"\r\n                >\r\n                    Search\r\n                </InputGroup.Text>\r\n            </InputGroup.Append>\r\n        </InputGroup>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\n\r\nconst AddressBook = ({ contacts, searchChangeHandler, deleteHandler }) => {\r\n    return (\r\n        <Container>\r\n            <SearchBox\r\n                searchChangeHandler={searchChangeHandler}\r\n                width=\"20rem\"\r\n                className=\"mx-auto my-5\"\r\n            />\r\n            {contacts.length === 0 ? (\r\n                <h2 className=\"text-center\">No Contacts</h2>\r\n            ) : (\r\n                <div>\r\n                    <ContactList\r\n                        contacts={contacts}\r\n                        deleteHandler={deleteHandler}\r\n                        className=\"d-flex flex-wrap  justify-content-around mb-5\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AddressBook;\r\n","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport AddressBook from \"../AddressBook/AddressBook\";\r\n\r\nconst ContactsPage = ({ contacts, searchChangeHandler, deleteHandler }) => (\r\n    <div>\r\n        <Header>Contacts</Header>\r\n        <AddressBook\r\n            contacts={contacts}\r\n            searchChangeHandler={searchChangeHandler}\r\n            deleteHandler={deleteHandler}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ContactsPage;\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { TiContacts } from \"react-icons/ti\";\r\nimport { LinkContainer } from \"react-router-bootstrap/\";\r\nimport style from \"./NavBar.module.css\";\r\n\r\nconst NavBar = ({ location }) => {\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand className={style.logoText}>\r\n                            <TiContacts className={style.logo} />\r\n                            {\"Address Book\"}\r\n                        </Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer exact to=\"/\">\r\n                                <Nav.Link className={style.link} active={false}>\r\n                                    Contacts\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/add-contact\">\r\n                                <Nav.Link className={style.link} active={false}>\r\n                                    Add Contact\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddContactPage from \"../AddContactPage/AddContactPage\";\nimport ContactsPage from \"../ContactsPage/ContactsPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"../NavBar/NavBar\";\n\nclass App extends Component {\n    state = {\n        submitNewData: false,\n        newFirstName: \"\",\n        newLastName: \"\",\n        newPhone: \"\",\n        newBirthDate: \"\",\n        search: \"\",\n        contacts: [\n            {\n                FirstName: \"Cathy\",\n                LastName: \"Pierce\",\n                Birthday: \"9/14/1996\",\n                Telephone: \"200-910-8132\"\n            },\n            {\n                FirstName: \"Alfonso\",\n                LastName: \"Cooley\",\n                Birthday: \"8/10/1973\",\n                Telephone: \"200-657-9362\"\n            },\n            {\n                FirstName: \"Victor\",\n                LastName: \"Gordon\",\n                Birthday: \"8/3/1970\",\n                Telephone: \"200-661-9407\"\n            },\n            {\n                FirstName: \"Colleen\",\n                LastName: \"Wright\",\n                Birthday: \"10/28/1967\",\n                Telephone: \"200-250-7949\"\n            },\n            {\n                FirstName: \"James\",\n                LastName: \"Johnston\",\n                Birthday: \"5/11/1972\",\n                Telephone: \"200-645-3176\"\n            },\n            {\n                FirstName: \"Anna\",\n                LastName: \"Reyes\",\n                Birthday: \"9/10/1975\",\n                Telephone: \"200-707-8670\"\n            }\n        ]\n    };\n\n\n    getUniqueId = ({ FirstName, LastName, Birthday, Telephone }) => {\n        return `${FirstName}${LastName}${Telephone}${Birthday}`;\n    };\n\n    filteredContacts = () => {\n        const { search, contacts } = this.state;\n        const test = (search, infoObject) => {\n            return Object.values(infoObject).some(value =>\n                value\n                    .trim()\n                    .toLowerCase()\n                    .includes(search.trim().toLowerCase())\n            );\n        };\n        return contacts.filter(contact => test(search, contact));\n    };\n\n    deleteHandler = event => {\n        const deleteBool = window.confirm(\n            \"Are you sure you want to delete contact?\"\n        );\n\n        if (deleteBool) {\n            const id = event.currentTarget.value;\n            this.setState(prevState => {\n                let contacts = [...prevState.contacts];\n                for (let i = 0; i < contacts.length; i++) {\n                    if (id === this.getUniqueId(contacts[i])) {\n                        contacts.splice(i, 1);\n                        break;\n                    }\n                }\n                return { contacts };\n            });\n        }\n    };\n\n    submitHandler = event => {\n        const submitNewData = window.confirm(\n            \"Are you sure you want to add new contact?\"\n        );\n        if (!submitNewData) {\n            event.preventDefault();\n            this.setState({ submitNewData });\n        } else {\n            this.setState(prevState => {\n                const newContact = {\n                    FirstName: prevState.newFirstName,\n                    LastName: prevState.newLastName,\n                    Telephone: prevState.newPhone,\n                    Birthday: prevState.newBirthDate\n                };\n                const contacts = [...prevState.contacts];\n                contacts.push(newContact);\n                return { submitNewData, contacts: [...contacts] };\n            });\n        }\n    };\n\n    inputChangeHandler = (event, stateToChange) => {\n        const input = event.target.value;\n        const update = {};\n        update[stateToChange] = input;\n        this.setState(update);\n    };\n\n    searchChangeHandler = event => {\n        this.inputChangeHandler(event, \"search\");\n    };\n\n    fnameChangeHandler = event => {\n        this.inputChangeHandler(event, \"newFirstName\");\n    };\n\n    lnameChangeHandler = event => {\n        this.inputChangeHandler(event, \"newLastName\");\n    };\n\n    phoneChangeHandler = event => {\n        this.inputChangeHandler(event, \"newPhone\");\n    };\n\n    birthDateChangeHandler = event => {\n        this.inputChangeHandler(event, \"newBirthDate\");\n    };\n\n    render() {\n        return (\n            <>\n                <Router basename={process.env.PUBLIC_URL + '/'}>\n                    <NavBar />\n                    <Switch>\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={routeProps => (\n                                <ContactsPage\n                                    {...routeProps}\n                                    contacts={this.filteredContacts()}\n                                    searchChangeHandler={\n                                        this.searchChangeHandler\n                                    }\n                                    deleteHandler={this.deleteHandler}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/add-contact\"\n                            render={routeProps => (\n                                <AddContactPage\n                                    {...routeProps}\n                                    submitHandler={this.submitHandler}\n                                    fnameChangeHandler={this.fnameChangeHandler}\n                                    lnameChangeHandler={this.lnameChangeHandler}\n                                    phoneChangeHandler={this.phoneChangeHandler}\n                                    birthDateChangeHandler={\n                                        this.birthDateChangeHandler\n                                    }\n                                />\n                            )}\n                        />\n                        <Route \n                            path=\"/\"\n                            render={routeProps => (\n                                <ContactsPage\n                                    {...routeProps}\n                                    contacts={this.filteredContacts()}\n                                    searchChangeHandler={\n                                        this.searchChangeHandler\n                                    }\n                                    deleteHandler={this.deleteHandler}\n                                />\n                            )}/>\n                    </Switch>\n                </Router>\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}